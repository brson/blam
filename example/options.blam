table Exchanges {
    #[unique_key]
    name: String,
    lot_size: Integer,
    fractional_contract_factor: Float,
}

table Accounts {
    #[unique_key]
    name: String,
    #[foreign_key(Exchanges.name)]
    exchange: String,
}

join AccountViewJoin {
    from Accounts,
    with Exchanges,
    where Accounts.exchange is Exchanges.name,
}

view AccountView {
    from AccountViewJoin,
} {
    name: String = Accounts.name,
    exchange: String = Accounts.exchange,
    lot_size: Integer = Exchanges.lot_size,
    fractional_contract_factor: Float = Exchanges.fractional_contract_factor,
}

table Spy {
    #[unique_key]
    date: Date,
    closing_price: Float,
}

table Txns {
    #[foreign_key(Account.name)]
    account: String,
    symbol: String,
    #[foreign_key(Spy.date)]
    opening_date: Date,
    #[foreign_key(Spy.date)]
    expiration_date: Date,
    callput: String { "Call" | "Put" },
    buysell: String { "Buy" | "Sell" },
    commission: Float,
}

join TxnViewJoin {
    from Txns,
    with AccountView,
    with Spy as OpeningSpy,
    with Spy as ExpirationSpy,
    where Txns.account is AccountView.name,
    where Txns.opening_date is OpeningSpy.date,
    where Txns.expiration_date is ExpirationSpy.date,
}

view TxnView {
    from TxnViewJoin,
} {
    account: String = Txns.account,
    symbol: String = Txns.symbol,
    opening_date: Date = Txns.opening_date,
    expiration_date: Date = Txns.expiration_date,
    callput: String = Txns.callput,
    buysell: String = Txns.buysell,
    commission: Float = Txns.commission,
    lot_size: Integer = AccountView.lot_size,
    fractional_contract_factor: Float = AccountView.fractional_contract_factor,
    opening_spy_price: Float = OpeningSpy.closing_price,
    closing_spy_price: Float = ClosingSpy.closing_price,
}

